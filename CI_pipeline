pipeline {
   environment {
       registryCredential = "dockerhub"
       docker_repo_name = "snehabhi/nginx"
       dockerImage = ''
   }
   agent any
   stages {
      stage('GitCheckOut'){
        steps{
            // git 'https://github.com/jglick/simple-maven-project-with-tests.git'
            git 'https://github.com/SnehAbhi/Jenkins_Docker_Trial.git'
        }
      }
      stage('BuildDockerImage'){
         steps {
             script {
                 dockerImage = docker.build docker_repo_name + ":$BUILD_NUMBER"
             }
          }
      }
      stage('PushImage'){
         steps{
           script {
               // Push Image on docker hub if build is successful
           //withDockerRegistry(credentialsId: 'dockerhub', url: 'https://hub.docker.com/')           // some block
           //dockerImage.push()
           docker.withRegistry( '', registryCredential ) {
           dockerImage.push()
           dockerImage.push('latest')
              }
            }
           }
           post{
               success{
                   sh "docker rmi $docker_repo_name:$BUILD_NUMBER"
               }
           }
       }
      stage('Deploy'){
        steps{
           echo '> Deploying the application ...'
           sshPublisher(publishers: [sshPublisherDesc(configName: 'Ansible Master', sshCredentials: [encryptedPassphrase: '{AQAAABAAAAAQr24/rYbLUVlt6qAVCwpkjNiOkPsQlmQjXQnuc3KuODw=}', key: '', keyPath: '/var/lib/jenkins/secrets/id_rsa', username: 'root'], transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'ansible-playbook /opt/deploy/docker_prac/playbook.yml -vvv', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '', remoteDirectorySDF: false, removePrefix: '', sourceFiles: '')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: true)])
          }
      }
   }
}
